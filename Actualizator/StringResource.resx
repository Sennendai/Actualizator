<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="comprobarDestino" xml:space="preserve">
    <value>¡Compruebe las rutas de las carpetas de destino!</value>
  </data>
  <data name="noOrigen" xml:space="preserve">
    <value>¡Introduce un ruta de origen</value>
  </data>
  <data name="archivoProyecto" xml:space="preserve">
    <value>proyectos.xml</value>
    <comment>Nombre del archivo donde se guarda la configuracion del XML</comment>
  </data>
  <data name="mensajeBorrarDestino" xml:space="preserve">
    <value>¿Quieres borrar el destino?</value>
  </data>
  <data name="guardadoXML" xml:space="preserve">
    <value>Archivo XML guardado  | Fecha:</value>
  </data>
  <data name="noLastBackup" xml:space="preserve">
    <value>¡No hay backup de la configuración seleccionada!</value>
  </data>
  <data name="xmlCorrupto" xml:space="preserve">
    <value>¡Archivo XML corrupto!</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="borrado" xml:space="preserve">
    <value> borrada | Fecha: </value>
  </data>
  <data name="mensajeError" xml:space="preserve">
    <value>Error: </value>
  </data>
  <data name="restaurar" xml:space="preserve">
    <value>Restaurar</value>
  </data>
  <data name="restaurarBackup" xml:space="preserve">
    <value>Backup restaurado  | Fecha:</value>
  </data>
  <data name="mensajeRellenarFiltro" xml:space="preserve">
    <value>¡Rellene el campo de filtro!</value>
  </data>
  <data name="comprobarOrigen" xml:space="preserve">
    <value>¡Compruebe la ruta de la carpeta de origen!</value>
  </data>
  <data name="mensajeBorrarProyecto" xml:space="preserve">
    <value>¿Esta seguro que quiere borrar la configuración?</value>
  </data>
  <data name="cancelar" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="accessDenied" xml:space="preserve">
    <value>¡Acceso denegado a la ruta especificada!</value>
  </data>
  <data name="proyecto" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="saludo" xml:space="preserve">
    <value>Per Aspera Ad Astra</value>
  </data>
  <data name="mensajeRestaurarBackup" xml:space="preserve">
    <value>¿Quieres restaurar el útimo backup?</value>
  </data>
  <data name="borrar" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="mensajeFecha" xml:space="preserve">
    <value> | Fecha: </value>
  </data>
  <data name="nuevoProyecto" xml:space="preserve">
    <value>Nueva configuracion</value>
  </data>
  <data name="alertaGuardarProyecto" xml:space="preserve">
    <value>¡Guarde la configuración actual!</value>
  </data>
  <data name="noDestino" xml:space="preserve">
    <value>¡Introduce un ruta de destino!</value>
  </data>
  <data name="mensajeBackup" xml:space="preserve">
    <value>Backup: </value>
  </data>
  <data name="nombreProyecto" xml:space="preserve">
    <value>¡Indique un nombre para la configuración!</value>
  </data>
  <data name="extrayendoInfo" xml:space="preserve">
    <value>Estamos trabajando en ello...</value>
  </data>
  <data name="sincronizarCarpetas" xml:space="preserve">
    <value>Carpetas sincronizadas | Fecha:</value>
  </data>
  <data name="archivoLog" xml:space="preserve">
    <value>Log.txt</value>
    <comment>Extension del archivo log, cada archivo de log lleva delante el nombre del proyecto</comment>
  </data>
  <data name="clickExpandir" xml:space="preserve">
    <value>click para expandir</value>
  </data>
  <data name="mismoNombre" xml:space="preserve">
    <value>Ya existe una configuracion con el mismo nombre</value>
  </data>
  <data name="filtrosCount" xml:space="preserve">
    <value>Filtros : </value>
  </data>
  <data name="carpetaLogs" xml:space="preserve">
    <value>logs</value>
    <comment>Nombre carpeta logs</comment>
  </data>
  <data name="totalArchivos" xml:space="preserve">
    <value>Total archivos a mover: </value>
  </data>
  <data name="numberLastBackUp" xml:space="preserve">
    <value>3</value>
    <comment>Indica el numero de backups que se quiere conservar, no es string pero...</comment>
  </data>
  <data name="procesoExplorer" xml:space="preserve">
    <value>explorer.exe</value>
  </data>
</root>